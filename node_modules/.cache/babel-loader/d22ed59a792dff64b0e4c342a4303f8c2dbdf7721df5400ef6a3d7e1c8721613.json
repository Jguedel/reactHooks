{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jgued\\\\ClassWork\\\\react-jokes-classes\\\\src\\\\JokeListHook.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Joke from \"./Joke\";\n//HOOKS\nimport GetJokes from \"./Hooks/GetJokes\";\n//STYLES\nimport \"./Styles/JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JokeListHooks = ({\n  toGet = 5\n}) => {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const allJokes = async () => {\n      let {\n        listJokes,\n        checkLoad\n      } = await GetJokes(toGet);\n      console.log(listJokes);\n      // console.log(checkLoad);\n      setJokes(jokes => {\n        return listJokes;\n      });\n      setIsLoading(isLoading => {\n        return checkLoad;\n      });\n    };\n    if (jokes.length === 0) allJokes();\n  }, [jokes]);\n  const newJoke = async () => {};\n  const vote = (id, num) => {\n    setJokes(jokes => jokes.map(j => j.joke.id === id ? {\n      ...j,\n      votes: j.votes + num\n    } : j));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: newJoke,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), jokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n      text: j.joke.joke,\n      id: j.joke.id,\n      votes: j.votes,\n      vote: vote\n    }, j.joke.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(JokeListHooks, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeListHooks;\nexport default JokeListHooks;\nvar _c;\n$RefreshReg$(_c, \"JokeListHooks\");","map":{"version":3,"names":["React","useState","useEffect","Joke","GetJokes","jsxDEV","_jsxDEV","JokeListHooks","toGet","_s","jokes","setJokes","isLoading","setIsLoading","allJokes","listJokes","checkLoad","console","log","length","newJoke","vote","id","num","map","j","joke","votes","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["C:/Users/jgued/ClassWork/react-jokes-classes/src/JokeListHook.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Joke from \"./Joke\";\n//HOOKS\nimport GetJokes from \"./Hooks/GetJokes\";\n//STYLES\nimport \"./Styles/JokeList.css\";\n\nconst JokeListHooks = ({ toGet = 5 }) => {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const allJokes = async () => {\n      let { listJokes, checkLoad } = await GetJokes(toGet);\n      console.log(listJokes);\n      // console.log(checkLoad);\n      setJokes((jokes) => {\n        return listJokes;\n      });\n      setIsLoading((isLoading) => {\n        return checkLoad;\n      });\n    };\n\n    if (jokes.length === 0) allJokes();\n  }, [jokes]);\n\n  const newJoke = async () => {};\n\n  const vote = (id, num) => {\n    setJokes((jokes) =>\n      jokes.map((j) => (j.joke.id === id ? { ...j, votes: j.votes + num } : j))\n    );\n  };\n\n  return (\n    <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={newJoke}>\n        Get New Jokes\n      </button>\n\n      {jokes.map((j) => (\n        <Joke\n          text={j.joke.joke}\n          key={j.joke.id}\n          id={j.joke.id}\n          votes={j.votes}\n          vote={vote}\n        />\n      ))}\n    </div>\n  );\n};\nexport default JokeListHooks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB;AACA,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;AACA,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,KAAK,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QAAEC,SAAS;QAAEC;MAAU,CAAC,GAAG,MAAMZ,QAAQ,CAACI,KAAK,CAAC;MACpDS,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;MACtB;MACAJ,QAAQ,CAAED,KAAK,IAAK;QAClB,OAAOK,SAAS;MAClB,CAAC,CAAC;MACFF,YAAY,CAAED,SAAS,IAAK;QAC1B,OAAOI,SAAS;MAClB,CAAC,CAAC;IACJ,CAAC;IAED,IAAIN,KAAK,CAACS,MAAM,KAAK,CAAC,EAAEL,QAAQ,CAAC,CAAC;EACpC,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY,CAAC,CAAC;EAE9B,MAAMC,IAAI,GAAGA,CAACC,EAAE,EAAEC,GAAG,KAAK;IACxBZ,QAAQ,CAAED,KAAK,IACbA,KAAK,CAACc,GAAG,CAAEC,CAAC,IAAMA,CAAC,CAACC,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGG,CAAC;MAAEE,KAAK,EAAEF,CAAC,CAACE,KAAK,GAAGJ;IAAI,CAAC,GAAGE,CAAE,CAC1E,CAAC;EACH,CAAC;EAED,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBvB,OAAA;MAAQsB,SAAS,EAAC,kBAAkB;MAACE,OAAO,EAAEV,OAAQ;MAAAS,QAAA,EAAC;IAEvD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERxB,KAAK,CAACc,GAAG,CAAEC,CAAC,iBACXnB,OAAA,CAACH,IAAI;MACHgC,IAAI,EAAEV,CAAC,CAACC,IAAI,CAACA,IAAK;MAElBJ,EAAE,EAAEG,CAAC,CAACC,IAAI,CAACJ,EAAG;MACdK,KAAK,EAAEF,CAAC,CAACE,KAAM;MACfN,IAAI,EAAEA;IAAK,GAHNI,CAAC,CAACC,IAAI,CAACJ,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CIF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}