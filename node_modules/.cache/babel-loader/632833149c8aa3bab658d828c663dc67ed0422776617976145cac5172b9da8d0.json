{"ast":null,"code":"import React, { useState } from \"react\";\nimport axios from \"axios\";\nconst GetJokes = async ({\n  toGet = 5\n}) => {\n  try {\n    // load jokes one at a time, adding not-yet-seen jokes\n    let listJokes = [];\n    let seenJokes = new Set();\n    console.log(\"hit\");\n    while (listJokes.length < toGet) {\n      let res = await axios.get(\"https://icanhazdadjoke.com\", {\n        headers: {\n          Accept: \"application/json\"\n        }\n      });\n      let {\n        joke\n      } = res.data;\n      console.log(joke);\n      if (!seenJokes.has(joke.id)) {\n        seenJokes.add(joke.id);\n        listJokes.push({\n          joke,\n          votes: 0\n        });\n        console.log(listJokes);\n      } else {\n        console.log(\"duplicate found!\");\n      }\n    }\n    return {\n      listJokes,\n      checkLoad: false\n    };\n  } catch (err) {\n    console.error(err);\n  }\n};\n_c = GetJokes;\nexport default GetJokes;\nvar _c;\n$RefreshReg$(_c, \"GetJokes\");","map":{"version":3,"names":["React","useState","axios","GetJokes","toGet","listJokes","seenJokes","Set","console","log","length","res","get","headers","Accept","joke","data","has","id","add","push","votes","checkLoad","err","error","_c","$RefreshReg$"],"sources":["C:/Users/jgued/ClassWork/react-jokes-classes/src/Hooks/GetJokes.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nconst GetJokes = async ({ toGet = 5 }) => {\r\n  try {\r\n    // load jokes one at a time, adding not-yet-seen jokes\r\n    let listJokes = [];\r\n    let seenJokes = new Set();\r\n    console.log(\"hit\");\r\n\r\n    while (listJokes.length < toGet) {\r\n      let res = await axios.get(\"https://icanhazdadjoke.com\", {\r\n        headers: { Accept: \"application/json\" },\r\n      });\r\n      let { joke } = res.data;\r\n      console.log(joke);\r\n      if (!seenJokes.has(joke.id)) {\r\n        seenJokes.add(joke.id);\r\n        listJokes.push({ joke, votes: 0 });\r\n        console.log(listJokes);\r\n      } else {\r\n        console.log(\"duplicate found!\");\r\n      }\r\n    }\r\n    return { listJokes, checkLoad: false };\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport default GetJokes;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAG,MAAAA,CAAO;EAAEC,KAAK,GAAG;AAAE,CAAC,KAAK;EACxC,IAAI;IACF;IACA,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAIC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;IACzBC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAElB,OAAOJ,SAAS,CAACK,MAAM,GAAGN,KAAK,EAAE;MAC/B,IAAIO,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,4BAA4B,EAAE;QACtDC,OAAO,EAAE;UAAEC,MAAM,EAAE;QAAmB;MACxC,CAAC,CAAC;MACF,IAAI;QAAEC;MAAK,CAAC,GAAGJ,GAAG,CAACK,IAAI;MACvBR,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MACjB,IAAI,CAACT,SAAS,CAACW,GAAG,CAACF,IAAI,CAACG,EAAE,CAAC,EAAE;QAC3BZ,SAAS,CAACa,GAAG,CAACJ,IAAI,CAACG,EAAE,CAAC;QACtBb,SAAS,CAACe,IAAI,CAAC;UAAEL,IAAI;UAAEM,KAAK,EAAE;QAAE,CAAC,CAAC;QAClCb,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;MACxB,CAAC,MAAM;QACLG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACjC;IACF;IACA,OAAO;MAAEJ,SAAS;MAAEiB,SAAS,EAAE;IAAM,CAAC;EACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZf,OAAO,CAACgB,KAAK,CAACD,GAAG,CAAC;EACpB;AACF,CAAC;AAACE,EAAA,GAzBItB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}